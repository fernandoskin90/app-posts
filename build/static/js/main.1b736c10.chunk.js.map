{"version":3,"sources":["components/post/styles.js","components/post/index.js","utils/localStorage.js","hooks/validateUser.js","constants.js","screens/home/styles.js","screens/home/index.js","screens/login/styles.js","screens/login/index.js","screens/register/styles.js","screens/register/index.js","app.js","serviceWorker.js","index.js"],"names":["Item","styled","div","_templateObject","Title","_templateObject2","Body","_templateObject3","Post","_ref","body","title","react_default","a","createElement","setUserToken","token","callback","arguments","length","undefined","window","localStorage","setItem","getUserToken","getItem","useValidateUser","_useState","useState","_useState2","Object","slicedToArray","error","setError","_useState3","_useState4","userValid","setUserValid","_useState5","_useState6","loading","setLoading","useEffect","fetch","method","headers","Authorization","concat","then","res","json","data","catch","console","HomeContent","styles_templateObject","LogoutButton","button","styles_templateObject2","Home","history","loadingPosts","setLoadingPosts","posts","setPosts","_useValidateUser","Accept","Content-Type","_ref2","message","warn","react_router","to","map","_ref3","index","post","key","onClick","removeItem","removeUserToken","push","rotateSpinner","keyframes","login_styles_templateObject","LoginContent","login_styles_templateObject2","LoginContainer","styles_templateObject3","LoginInput","input","_templateObject4","LoginButton","_templateObject5","Spinner","_templateObject6","ErrorMessage","_templateObject7","Login","loadingForm","setLoadingForm","email","setEmail","password","setPassword","_useState7","_useState8","errorMessage","setErrorMessage","onChange","e","target","value","placeholder","type","disabled","JSON","stringify","register_styles_templateObject","register_styles_templateObject2","register_styles_templateObject3","styles_templateObject4","styles_templateObject5","styles_templateObject6","styles_templateObject7","Register","name","setName","_useState9","_useState10","username","setUsername","_useState11","_useState12","styles_LoginContainer","styles_LoginContent","styles_LoginInput","styles_LoginButton","userName","styles_Spinner","styles_ErrorMessage","App","react_router_dom","basename","exact","path","component","render","Boolean","location","hostname","match","ReactDOM","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b736c10.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Item = styled.div`\r\n  border: 1px gray solid;\r\n  box-shadow: 2px 2px 10px 2px lightgray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 300px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const Body = styled.div`\r\n  font-style: italic;\r\n`\r\n\r\n","import React from 'react';\r\n\r\nimport { Body, Item, Title } from './styles';\r\n\r\nconst Post = ({\r\n  body,\r\n  title\r\n}) => (\r\n  <Item>\r\n    <Title>{title}</Title>\r\n    <Body>{body}</Body>\r\n  </Item>\r\n);\r\n\r\nexport default Post;\r\n","export const setUserToken = (token, callback = () => {}) => {\r\n  window.localStorage.setItem('posts_app_token', token);\r\n  callback();\r\n}\r\n\r\nexport const removeUserToken = (callback = () => {}) => {\r\n  window.localStorage.removeItem('posts_app_token');\r\n  callback();\r\n}\r\n\r\nexport const getUserToken = () => \r\n  window.localStorage.getItem('posts_app_token');\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport { validateUserByToken } from '../constants';\r\nimport { getUserToken } from '../utils/localStorage';\r\n\r\nexport const useValidateUser = () => {\r\n  const [error, setError] = useState(false);\r\n  const [userValid, setUserValid] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(function () {\r\n    const token = getUserToken()\r\n\r\n    if (token) {\r\n      fetch(validateUserByToken, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(({ data }) => {\r\n          setUserValid(data ? data.userValid : false);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          setError(true);\r\n        })\r\n    } else {\r\n      setLoading(false);\r\n      setError(true);\r\n    }\r\n  }, [])\r\n\r\n  return {\r\n    error,\r\n    loading,\r\n    userValid\r\n  }\r\n}\r\n","export const validateUserByToken =\r\n  'https://stormy-ocean-53996.herokuapp.com/user/authByToken';\r\n\r\nexport const loginUrl = 'https://stormy-ocean-53996.herokuapp.com/user/login';\r\n\r\nexport const registerUrl =\r\n  'https://stormy-ocean-53996.herokuapp.com/user/register';\r\n\r\nexport const getPostsUrl = 'https://stormy-ocean-53996.herokuapp.com/posts';\r\n","import styled from 'styled-components';\r\n\r\nexport const HomeContent = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: repeat(auto-fill, 300px);\r\n  grid-template-rows: repeat(auto-fill, 1fr);\r\n  height: calc(100vh - 60px);\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const LogoutButton = styled.button`\r\n  background-color: tomato;\r\n  border-radius: 20px;\r\n  bottom: 32px;\r\n  color: #FFF;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  position: fixed;\r\n  right: 32px;\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Post from '../../components/post';\r\nimport { useValidateUser } from '../../hooks/validateUser';\r\nimport { getUserToken, removeUserToken } from '../../utils/localStorage';\r\nimport { getPostsUrl } from '../../constants';\r\n\r\nimport { HomeContent, LogoutButton } from './styles';\r\n\r\nconst Home = ({ history }) => {\r\n  const [ loadingPosts, setLoadingPosts ] = useState(false);\r\n  const [ posts, setPosts ] = useState([]);\r\n  const { error, loading, userValid } = useValidateUser();\r\n\r\n  useEffect(() => {\r\n    if (userValid) {\r\n      setLoadingPosts(true);\r\n      fetch(getPostsUrl, {\r\n        headers: {\r\n          Authorization: `Bearer ${getUserToken()}`,\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(res => res.json())\r\n        .then(({ data, message }) => {\r\n          setLoadingPosts(false);\r\n          setPosts(data);\r\n        })\r\n        .catch((error) => {\r\n          console.warn(error)\r\n        })\r\n    }\r\n  }, [userValid])\r\n\r\n  if (error) {\r\n    return <Redirect to=\"/login\" />\r\n  }\r\n\r\n  if (loading || loadingPosts) {\r\n    return (\r\n      <h1>Loading ...</h1>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <HomeContent>\r\n      {\r\n        posts.map(({ body, title }, index) => (\r\n          <Post\r\n            body={body}\r\n            key={`post-${index}`}  \r\n            title={title}\r\n          />\r\n        ))\r\n      }\r\n      <LogoutButton\r\n        onClick={() => {\r\n          removeUserToken(() => { history.push('/login') });\r\n        }}\r\n      >\r\n        Logout\r\n      </LogoutButton>\r\n    </HomeContent>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst rotateSpinner = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const LoginContent = styled.div`\r\n  justify-content: center;\r\n  border: 1px solid grey;\r\n  box-shadow: 2px 2px 5px 2px gray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 150px;\r\n  position: relative;\r\n  width: 200px;\r\n`;\r\n\r\nexport const LoginContainer = styled.div`\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n  height: calc(100vh - 20px);\r\n`;\r\n\r\nexport const LoginInput = styled.input`\r\n  margin: 5px auto;\r\n`;\r\n\r\nexport const LoginButton = styled.button`\r\n  margin: 5px auto;\r\n  max-width: 100px;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  animation: ${rotateSpinner} 1.5s linear infinite;\r\n  border: 3px tomato solid;\r\n  border-right: 3px transparent solid;\r\n  border-radius: 50%;\r\n  bottom: 35px;\r\n  height: 15px;\r\n  position: absolute;\r\n  right: 45px;\r\n  width: 15px;\r\n`;\r\n\r\nexport const ErrorMessage = styled.div`\r\n  color: tomato;\r\n  font-size: 1rem;\r\n  text-align: center;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  ErrorMessage,\r\n  LoginButton,\r\n  LoginContainer,\r\n  LoginContent,\r\n  LoginInput,\r\n  Spinner\r\n} from './styles';\r\nimport { setUserToken } from '../../utils/localStorage';\r\nimport { useValidateUser } from '../../hooks/validateUser';\r\nimport { loginUrl } from '../../constants';\r\n\r\nconst Login = ({\r\n  history\r\n}) => {\r\n  const [loadingForm, setLoadingForm] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const {\r\n    loading,\r\n    userValid\r\n  } = useValidateUser();\r\n\r\n  const loginUser = () => {\r\n    setLoadingForm(true);\r\n    setErrorMessage('');\r\n    fetch(loginUrl, {\r\n      body: JSON.stringify({\r\n        email,\r\n        password\r\n      }),\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST'\r\n    })\r\n      .then(res => res.json())\r\n      .then(({ data, message }) => {\r\n        setLoadingForm(false);\r\n        if (data && data.token) {\r\n          setUserToken(\r\n            data.token,\r\n            () => history.push('/')\r\n          );\r\n        }\r\n        if (!data && message) {\r\n          setErrorMessage(message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.warn(error)\r\n      })\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>Loading ...</div>\r\n    );\r\n  }\r\n\r\n  if (userValid) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginContent>\r\n        <LoginInput\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          value={email}\r\n        />\r\n        <LoginInput\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n        />\r\n        <LoginButton\r\n          disabled={!email || !password || loadingForm}\r\n          onClick={loginUser}\r\n        >\r\n          Login\r\n        </LoginButton>\r\n        { loadingForm && <Spinner /> }\r\n        <LoginButton\r\n          onClick={() => history.push('/register')}\r\n        >\r\n          To register\r\n        </LoginButton>\r\n        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n      </LoginContent>\r\n    </LoginContainer>\r\n  )\r\n};\r\n\r\nexport default Login;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst rotateSpinner = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const LoginContent = styled.div`\r\n  justify-content: center;\r\n  border: 1px solid grey;\r\n  box-shadow: 2px 2px 5px 2px gray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 250px;\r\n  position: relative;\r\n  width: 250px;\r\n`;\r\n\r\nexport const LoginContainer = styled.div`\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n  height: calc(100vh - 20px);\r\n`;\r\n\r\nexport const LoginInput = styled.input`\r\n  margin: 5px auto;\r\n`;\r\n\r\nexport const LoginButton = styled.button`\r\n  margin: 5px auto;\r\n  max-width: 100px;\r\n`;\r\n\r\nexport const Spinner = styled.div`\r\n  animation: ${rotateSpinner} 1.5s linear infinite;\r\n  border: 3px tomato solid;\r\n  border-right: 3px transparent solid;\r\n  border-radius: 50%;\r\n  bottom: 35px;\r\n  height: 15px;\r\n  position: absolute;\r\n  right: 45px;\r\n  width: 15px;\r\n`;\r\n\r\nexport const ErrorMessage = styled.div`\r\n  color: tomato;\r\n  font-size: 1rem;\r\n  text-align: center;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {\r\n  ErrorMessage,\r\n  LoginButton,\r\n  LoginContainer,\r\n  LoginContent,\r\n  LoginInput,\r\n  Spinner\r\n} from './styles';\r\nimport { setUserToken } from '../../utils/localStorage';\r\nimport { useValidateUser } from '../../hooks/validateUser';\r\nimport { registerUrl } from '../../constants';\r\n\r\nconst Register = ({\r\n  history\r\n}) => {\r\n  const [loadingForm, setLoadingForm] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const {\r\n    loading,\r\n    userValid\r\n  } = useValidateUser();\r\n\r\n  const registerUser = () => {\r\n    setLoadingForm(true);\r\n    setErrorMessage('');\r\n    fetch(registerUrl, {\r\n      body: JSON.stringify({\r\n        email,\r\n        name,\r\n        password,\r\n        userName: username\r\n      }),\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST'\r\n    })\r\n      .then(res => res.json())\r\n      .then(({ data, message }) => {\r\n        setLoadingForm(false);\r\n        if (data && data.token) {\r\n          setUserToken(\r\n            data.token,\r\n            () => history.push('/')\r\n          );\r\n        }\r\n\r\n        if (!data && message) {\r\n          setErrorMessage(message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.warn(error)\r\n      })\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div>Loading ...</div>\r\n    );\r\n  }\r\n\r\n  if (userValid) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <LoginContainer>\r\n      <LoginContent>\r\n        <LoginInput\r\n          onChange={e => setName(e.target.value)}\r\n          placeholder=\"Name\"\r\n          value={name}\r\n        />\r\n        <LoginInput\r\n          onChange={e => setUsername(e.target.value)}\r\n          placeholder=\"Username\"\r\n          value={username}\r\n        />\r\n        <LoginInput\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          value={email}\r\n        />\r\n        <LoginInput\r\n          onChange={e => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n        />\r\n        <LoginButton\r\n          disabled={!email || !password || !name || !username || loadingForm}\r\n          onClick={registerUser}\r\n        >\r\n          Register\r\n        </LoginButton>\r\n        { loadingForm && <Spinner /> }\r\n        <LoginButton\r\n          onClick={() => history.push('/login')}\r\n        >\r\n          To login\r\n        </LoginButton>\r\n        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n      </LoginContent>\r\n    </LoginContainer>\r\n  )\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from './screens/home';\r\nimport Login from './screens/login';\r\nimport Register from './screens/register';\r\n\r\nconst App = () => (\r\n  <HashRouter basename=\"/\">\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/login\"\r\n        component={Login}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/register\"\r\n        component={Register}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        component={Home}\r\n      />\r\n      <Route\r\n        render={() => <Redirect to=\"/\" />}\r\n      />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}